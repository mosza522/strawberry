ERROR : MySql query failed	IP : 58.9.99.218 	DATE/TIME : 06/12/2016 17:0:47 h
SQL ERROR : INSERT INTO tb_course (course_state, course_profileth, course_profileen, course_campusth, course_campusen, course_offeredth, course_offereden, course_scholarth, course_scholaren, course_youtube, course_pic, course_type, course_create) VALUES (Array, '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', 'https://www.youtube.com/embed/nIVOFq3Xyzs', '20161206174946.png', '4', '2016-12-06 17:49:47')
MSG ERROR : Unknown column 'Array' in 'field list'

ERROR : MySql query failed	IP : 58.9.99.218 	DATE/TIME : 06/12/2016 17:0:53 h
SQL ERROR : INSERT INTO tb_course (course_state, course_profileth, course_profileen, course_campusth, course_campusen, course_offeredth, course_offereden, course_scholarth, course_scholaren, course_youtube, course_pic, course_type, course_create) VALUES (Array, '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', '<p>Before jQuery version 1.12/2.2, the&nbsp;<code>.addClass()</code>&nbsp;method manipulated the&nbsp;<code>className</code>&nbsp;<em>property</em>&nbsp;of the selected elements, not the&nbsp;<code>class</code>&nbsp;<em>attribute</em>. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</p>\r\n', 'https://www.youtube.com/embed/nIVOFq3Xyzs', '20161206174953.png', '4', '2016-12-06 17:49:53')
MSG ERROR : Unknown column 'Array' in 'field list'

ERROR : MySql query failed	IP : 58.9.99.218 	DATE/TIME : 06/12/2016 20:0:46 h
SQL ERROR : SELECT * FROM tb_state    ORDER BY state_nameen asc  LIMIT state_country asc
MSG ERROR : Undeclared variable: state_country

ERROR : MySql query failed	IP : 58.9.99.218 	DATE/TIME : 06/12/2016 20:0:48 h
SQL ERROR : SELECT * FROM tb_state    ORDER BY state_nameen asc  LIMIT state_country asc
MSG ERROR : Undeclared variable: state_country

ERROR : MySql query failed	IP : 58.9.99.218 	DATE/TIME : 06/12/2016 21:0:29 h
SQL ERROR : UPDATE tb_course SET course_state = '1,2,3', course_profileth = '<p>$typecourse</p>\r\n', course_profileen = '<p>$typecourse</p>\r\n', course_titleth = 'ทำไมจึงต้องนำมาใช้?', course_titleen = 'Embassy English', course_campusth = '<p>$typecourse</p>\r\n', course_campusen = '<p>$typecourse</p>\r\n', course_offeredth = '<p>$typecourse</p>\r\n', course_offereden = '<p>$typecourse</p>\r\n', course_scholarth = '<p>$typecourse</p>\r\n', course_scholaren = '<p>$typecourse</p>\r\n', course_youtube = 'https://www.youtube.com/embed/nIVOFq3Xyzs', course_pic = '20161206204753.jpg', course_type = Array, course_create = '2016-12-06 21:45:29'  WHERE course_id = '7'
MSG ERROR : Unknown column 'Array' in 'field list'

ERROR : MySql query failed	IP : 58.9.99.218 	DATE/TIME : 06/12/2016 22:0:05 h
SQL ERROR : INSERT INTO tb_counselors (counselors_fullnameth, counselors_fullnameen, counselors_education, counselors_position, counselors_tel, counselors_email, counselors_line, counselors_pic, counselors_location, counselors_create) VALUES ('Tipakorn Khanthang', 'Tipakorn Khanthang', '', 'Programmer', '+66857527341', 'menunreal47@gmail.com', '+66857527341', NULL, '', '2016-12-06 22:54:05')
MSG ERROR : Column 'counselors_pic' cannot be null

ERROR : MySql query failed	IP : 58.9.99.218 	DATE/TIME : 06/12/2016 22:0:07 h
SQL ERROR : INSERT INTO tb_counselors (counselors_fullnameth, counselors_fullnameen, counselors_education, counselors_position, counselors_tel, counselors_email, counselors_line, counselors_pic, counselors_location, counselors_create) VALUES ('Tipakorn Khanthang', 'Tipakorn Khanthang', '', 'Programmer', '+66857527341', 'menunreal47@gmail.com', '+66857527341', NULL, '', '2016-12-06 22:54:07')
MSG ERROR : Column 'counselors_pic' cannot be null

ERROR : MySql query failed	IP : 58.9.99.218 	DATE/TIME : 06/12/2016 22:0:27 h
SQL ERROR : INSERT INTO tb_counselors (counselors_fullnameth, counselors_fullnameen, counselors_education, counselors_position, counselors_tel, counselors_email, counselors_line, counselors_pic, counselors_location, counselors_create) VALUES ('Tipakorn Khanthang', 'Tipakorn Khanthang', '', 'Programmer', '+66857527341', 'menunreal47@gmail.com', '+66857527341', NULL, '', '2016-12-06 22:54:27')
MSG ERROR : Column 'counselors_pic' cannot be null

